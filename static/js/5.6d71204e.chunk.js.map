{"version":3,"sources":["pages/app/groups/index.js","components/Translate/index.js","components/Translate/Translate.js","components/footers/MainFooter.js","constants/languages/options.js","components/Translate/ChangeLanguage.js","components/Navigation/TopNav/index.js","components/Navigation/TopNav/TopNav.js","layout/MainLayout/MainLayout.style.js","layout/MainLayout/MainLayout.js"],"names":["Groups","Translate","text","props","t","useTranslation","MainFooter","id","className","Container","Row","Col","md","Date","getFullYear","icon","label","url","map","s","target","href","languages","abbrv","ChangeLanguage","i18n","currentLanguage","language","langIndex","findIndex","DropdownToggle","nav","caret","DropdownMenu","right","DropdownItem","active","onClick","changeLanguage","then","setLocalStorage","catch","console","error","TopNav","darkMode","location","useLocation","useState","isOpen","setIsOpen","useEffect","animateScroll","scrollToTop","smooth","offset","pathname","Navbar","dark","light","color","fixed","expand","to","NavbarToggler","Collapse","navbar","Nav","path","m","NavItem","disabled","UncontrolledDropdown","inNavbar","MainLayoutStyle","styled","MainLayout","children","showFooter"],"mappings":"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","file":"static/js/5.6d71204e.chunk.js","sourcesContent":["import MainLayout from \"../../../layout/MainLayout/MainLayout\";\r\n\r\nconst Groups = () => {\r\n  return <MainLayout>Groups</MainLayout>;\r\n};\r\n\r\nexport default Groups;\r\n","import Translate from \"./Translate\";\r\n\r\nexport default Translate;\r\n","import { useTranslation } from \"react-i18next\";\r\n\r\nconst Translate = ({ text, ...props }) => {\r\n  const { t } = useTranslation();\r\n  return <span {...props}>{t(text)}</span>;\r\n};\r\n\r\nexport default Translate;\r\n","import { Col, Container, Row } from \"reactstrap\";\r\nimport Translate from \"../Translate\";\r\n\r\nconst MainFooter = () => {\r\n  const socialMedia = [\r\n    {\r\n      icon: \"\",\r\n      label: \"Facebook\",\r\n      url: \"https://www.facebook.com/112283280567588/\",\r\n    },\r\n    {\r\n      icon: \"\",\r\n      label: \"YouTube\",\r\n      url: \"https://youtube.com/channel/UCq7PXebEbR3Pw6n2LLQppmA\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <footer id=\"footer\" className=\"bg-light mt-5\">\r\n      <Container>\r\n        <Row className=\"pt-2 align-items-center\">\r\n          <Col md={6}>\r\n            <p className=\"text-center text-muted\">\r\n              © Copyright {new Date().getFullYear()} JUMI\r\n            </p>\r\n          </Col>\r\n          <Col md={6}>\r\n            <h5>\r\n              <Translate text=\"followUs.label\" />:\r\n            </h5>\r\n            <ul className=\"ml-4 list-group \">\r\n              {socialMedia.map((s) => (\r\n                <li key={s.label}>\r\n                  <a target=\"social-media\" href={s.url}>\r\n                    {s.label}\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\nexport default MainFooter;\r\n","const languages = [\r\n  {\r\n    label: \"Español\",\r\n    abbrv: \"es\",\r\n  },\r\n  {\r\n    label: \"English\",\r\n    abbrv: \"en\",\r\n  },\r\n];\r\n\r\nexport default languages;\r\n","import React from \"react\";\r\nimport { DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\r\nimport Translate from \"./Translate\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { setLocalStorage } from \"../../storage/localStorage\";\r\nimport languages from \"../../constants/languages/options\";\r\n\r\nconst ChangeLanguage = () => {\r\n  const { i18n } = useTranslation();\r\n  const currentLanguage = i18n.language;\r\n\r\n  const langIndex = languages.findIndex(\r\n    ({ abbrv }) => abbrv === currentLanguage\r\n  );\r\n\r\n  const changeLanguage = (language) => {\r\n    i18n\r\n      .changeLanguage(language)\r\n      .then(() => {\r\n        // remember user language - storage value in local storage\r\n        setLocalStorage(\"language\", language);\r\n      })\r\n      .catch(console.error(\"Unable to change language\"));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DropdownToggle nav caret>\r\n        {languages[langIndex]?.label || <Translate text=\"language_label\" />}\r\n      </DropdownToggle>\r\n      <DropdownMenu right>\r\n        {languages.map(({ abbrv, label }) => (\r\n          <DropdownItem\r\n            active={abbrv === currentLanguage}\r\n            key={abbrv}\r\n            onClick={() => changeLanguage(abbrv)}\r\n          >\r\n            {label}\r\n          </DropdownItem>\r\n        ))}\r\n      </DropdownMenu>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangeLanguage;\r\n","import TopNav from \"./TopNav\";\r\n\r\nexport default TopNav;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav,\r\n  NavItem,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\nimport { animateScroll } from \"react-scroll\";\r\nimport Translate from \"../../Translate\";\r\nimport ChangeLanguage from \"../../Translate/ChangeLanguage\";\r\n\r\nconst TopNav = ({ darkMode = false }) => {\r\n  let location = useLocation();\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const menu = [\r\n    {\r\n      label: \"prayRosary.label\",\r\n      path: \"/app/rosary\",\r\n    },\r\n    {\r\n      label: \"religiousGroups.label\",\r\n      path: \"/app/groups\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // smooth scroll to the correct prayer\r\n    animateScroll.scrollToTop({\r\n      smooth: true,\r\n      offset: -150,\r\n    });\r\n  }, [location.pathname]);\r\n\r\n  return (\r\n    <Navbar\r\n      // background color\r\n      dark={darkMode}\r\n      light={!darkMode}\r\n      // color of text\r\n      color={!darkMode && \"light\"}\r\n      fixed=\"top\"\r\n      expand=\"md\"\r\n    >\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        <Translate text=\"app.shortName\" />\r\n      </Link>\r\n      <NavbarToggler onClick={toggle} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"mr-auto\" navbar>\r\n          {menu.map((m) => (\r\n            <NavItem key={m.label} active={location.pathname === m.path}>\r\n              <Link\r\n                className={`nav-link ${m.disabled && \"disabled\"}`}\r\n                to={m.path}\r\n              >\r\n                <Translate text={m.label} />\r\n              </Link>\r\n            </NavItem>\r\n          ))}\r\n        </Nav>\r\n        <UncontrolledDropdown inNavbar>\r\n          <ChangeLanguage />\r\n        </UncontrolledDropdown>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n","import { Container } from \"reactstrap\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MainLayoutStyle = styled(Container)`\r\n  margin-top: 50px;\r\n`;\r\n\r\nexport { MainLayoutStyle };\r\n","import MainFooter from \"../../components/footers/MainFooter\";\r\nimport { TopNav } from \"../../components/Navigation\";\r\nimport { MainLayoutStyle } from \"./MainLayout.style\";\r\n\r\nconst MainLayout = ({ children, showFooter = true }) => (\r\n  <div className=\"static-background\">\r\n    <TopNav />\r\n    <MainLayoutStyle id=\"container\" className=\"pt-2\">\r\n      {children}\r\n    </MainLayoutStyle>\r\n    {showFooter && <MainFooter />}\r\n  </div>\r\n);\r\n\r\nexport default MainLayout;\r\n"],"sourceRoot":""}